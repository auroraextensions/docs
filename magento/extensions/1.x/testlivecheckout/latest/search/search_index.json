{
    "docs": [
        {
            "location": "/",
            "text": "Test Live Checkout\n\n\n\n\nThis documentation is for the Magento 1.x version. For the Magento 2.x version, see \nhere\n.\n\n\n\n\nOverview\n\n\nTest Live Checkout is a Magento extension intended for use with automated browser testing tools, such as \nPuppeteer\n.\nAutomated browser tests simulate real user behaviors through a series of instructions, allowing you to discover subtle, difficult bugs which impact your bottom line.\n\n\nTest Live Checkout provides the ability to complete the sales transaction pipeline, by allowing an automated browser test to submit an order in the same fashion a real user\nwould submit an order. This has several advantages over the historical approach, which is to create simple test products and submit the order outside of a browser context.\n\n\nDownload\n\n\nThe extension is available for purchase \nhere\n.\n\n\nQuick Start\n\n\n\n\nInstall \nDocker\n\n\nInstall \nNode\n\n\nClone \ndockerized-magento\n and follow setup guide\n\n\n\n\nOnce dockerized-magento has completed setup, you need to install the Test Live Checkout extension.\n\n\nAfter installing the extension, complete the following:\n\n\n\n\nFrom Admin area, navigate to \nSystem\n -> \nConfiguration\n -> \nNEB Extensions\n (left sidebar) -> \nTest Live Checkout\n\n\nUnder \nGeneral Settings\n, set \nEnable Live Checkout Testing\n to \nYes\n\n\nGenerate 32 character alphanumeric authentication token and paste into \nAuthentication Token\n field\n\n\nClick \nSave\n\n\n\n\nAfter configuring the extension, complete the following:\n\n\n\n\n\n\nCreate a workspace directory:\n\n\nmkdir testlivecheckout-puppeteer-scripts && cd testlivecheckout-puppeteer-scripts\n\n\n\n\n\n\nFetch a copy of the \nguest-checkout.js\n Puppeteer script we'll use shortly:\n\n\ncurl -fsL -O https://nickolasburr.github.io/magento/extensions/1.x/testlivecheckout/puppeteer/guest-checkout.js\n\n\n\n\n\n\nExport the authentication token from earlier to your shell environment:\n\n\nexport TLC_AUTH_TOKEN=\"<AUTH_TOKEN_FROM_EARLIER>\"\n\n\n\n\n\n\nRun \nguest-checkout.js\n:\n\n\nnode guest-checkout.js\n\n\n\n\n\n\nOnce the script has finished running, you should have 10 PNG screenshots of the various stages of checkout. The last screenshot should be of the Home page, indicating a successful order submission.",
            "title": "Getting Started"
        },
        {
            "location": "/#test-live-checkout",
            "text": "This documentation is for the Magento 1.x version. For the Magento 2.x version, see  here .",
            "title": "Test Live Checkout"
        },
        {
            "location": "/#overview",
            "text": "Test Live Checkout is a Magento extension intended for use with automated browser testing tools, such as  Puppeteer .\nAutomated browser tests simulate real user behaviors through a series of instructions, allowing you to discover subtle, difficult bugs which impact your bottom line.  Test Live Checkout provides the ability to complete the sales transaction pipeline, by allowing an automated browser test to submit an order in the same fashion a real user\nwould submit an order. This has several advantages over the historical approach, which is to create simple test products and submit the order outside of a browser context.",
            "title": "Overview"
        },
        {
            "location": "/#download",
            "text": "The extension is available for purchase  here .",
            "title": "Download"
        },
        {
            "location": "/#quick-start",
            "text": "Install  Docker  Install  Node  Clone  dockerized-magento  and follow setup guide   Once dockerized-magento has completed setup, you need to install the Test Live Checkout extension.  After installing the extension, complete the following:   From Admin area, navigate to  System  ->  Configuration  ->  NEB Extensions  (left sidebar) ->  Test Live Checkout  Under  General Settings , set  Enable Live Checkout Testing  to  Yes  Generate 32 character alphanumeric authentication token and paste into  Authentication Token  field  Click  Save   After configuring the extension, complete the following:    Create a workspace directory:  mkdir testlivecheckout-puppeteer-scripts && cd testlivecheckout-puppeteer-scripts    Fetch a copy of the  guest-checkout.js  Puppeteer script we'll use shortly:  curl -fsL -O https://nickolasburr.github.io/magento/extensions/1.x/testlivecheckout/puppeteer/guest-checkout.js    Export the authentication token from earlier to your shell environment:  export TLC_AUTH_TOKEN=\"<AUTH_TOKEN_FROM_EARLIER>\"    Run  guest-checkout.js :  node guest-checkout.js    Once the script has finished running, you should have 10 PNG screenshots of the various stages of checkout. The last screenshot should be of the Home page, indicating a successful order submission.",
            "title": "Quick Start"
        }
    ]
}