{
    "docs": [
        {
            "location": "/",
            "text": "Test Live Checkout\n\n\nThis documentation is for the Magento 1.x version. For the Magento 2.x version, see \nhere\n.\n\n\nPreamble\n\n\nTest Live Checkout is a premium Magento extension, costing only $49.99 USD. If you're uncertain whether or not you want to purchase, please consider the following:\n\n\n\n\nThe average online order (across all industries) is approximately $82 USD. If Test Live Checkout is able to save just \none\n order of equal value,\nit will have covered its cost in revenue by 1.64x.\n\n\n\n\nThat's an exceptionally small price to pay for such a valuable asset.\n\n\nOverview\n\n\nTest Live Checkout is a Magento extension intended for use with automated browser testing tools, such as \nPuppeteer\n.\nAutomated browser testing simulates real user behaviors through a series of instructions, allowing you to discover subtle, difficult bugs which impact your bottom line.\n\n\nTest Live Checkout provides the ability to complete the sales transaction pipeline, by allowing an automated browser test to submit an order in the same fashion a real user\nwould submit an order. This has several advantages over the historical approach, which is to create simple test products and submit the order outside of a browser context.\n\n\nQuick Start\n\n\n\n\nInstall \nDocker\n\n\nInstall \nNode\n\n\nClone \ndockerized-magento\n and follow setup guide\n\n\n\n\nOnce dockerized-magento has completed setup, you need to install the Test Live Checkout extension.\n\n\nAfter installing the extension, complete the following:\n\n\n\n\nLog into Admin area and navigate to System -> Configuration -> NEB Extensions (left sidebar) -> Test Live Checkout\n\n\nEnable the extension\n\n\nGenerate 32 character alphanumeric authentication token and paste into \nAuthentication Token\n field\n\n\nIf you want a custom redirect URL, add it to the \nRedirect URL\n field. By default, it redirects to \n/\n on successful submission.\n\n\nClick Save\n\n\n\n\nOnce the extension configuration is complete, we can now run an example automated test.\n\n\n\n\nmkdir testlivecheckout-puppeteer-scripts && cd testlivecheckout-puppeteer-scripts\n\n\ncurl -fsL -O https://nickolasburr.github.io/magento/1.x/extensions/testlivecheckout/puppeteer/guest-checkout.js\n\n\nReplace \ntestshop.com\n with the domain used for dockerized-magento (default is \ndockerized-magento.local\n) and save file\n\n\nUsing the authentication token from earlier, \nexport TLC_AUTH_TOKEN=\"<AUTH_TOKEN_FROM_EARLIER>\"\n\n\nnode guest-checkout.js\n\n\n\n\nOnce the script has finished running, you should 10 PNG screenshots of the various stages of checkout.",
            "title": "Home"
        },
        {
            "location": "/#test-live-checkout",
            "text": "This documentation is for the Magento 1.x version. For the Magento 2.x version, see  here .",
            "title": "Test Live Checkout"
        },
        {
            "location": "/#preamble",
            "text": "Test Live Checkout is a premium Magento extension, costing only $49.99 USD. If you're uncertain whether or not you want to purchase, please consider the following:   The average online order (across all industries) is approximately $82 USD. If Test Live Checkout is able to save just  one  order of equal value,\nit will have covered its cost in revenue by 1.64x.   That's an exceptionally small price to pay for such a valuable asset.",
            "title": "Preamble"
        },
        {
            "location": "/#overview",
            "text": "Test Live Checkout is a Magento extension intended for use with automated browser testing tools, such as  Puppeteer .\nAutomated browser testing simulates real user behaviors through a series of instructions, allowing you to discover subtle, difficult bugs which impact your bottom line.  Test Live Checkout provides the ability to complete the sales transaction pipeline, by allowing an automated browser test to submit an order in the same fashion a real user\nwould submit an order. This has several advantages over the historical approach, which is to create simple test products and submit the order outside of a browser context.",
            "title": "Overview"
        },
        {
            "location": "/#quick-start",
            "text": "Install  Docker  Install  Node  Clone  dockerized-magento  and follow setup guide   Once dockerized-magento has completed setup, you need to install the Test Live Checkout extension.  After installing the extension, complete the following:   Log into Admin area and navigate to System -> Configuration -> NEB Extensions (left sidebar) -> Test Live Checkout  Enable the extension  Generate 32 character alphanumeric authentication token and paste into  Authentication Token  field  If you want a custom redirect URL, add it to the  Redirect URL  field. By default, it redirects to  /  on successful submission.  Click Save   Once the extension configuration is complete, we can now run an example automated test.   mkdir testlivecheckout-puppeteer-scripts && cd testlivecheckout-puppeteer-scripts  curl -fsL -O https://nickolasburr.github.io/magento/1.x/extensions/testlivecheckout/puppeteer/guest-checkout.js  Replace  testshop.com  with the domain used for dockerized-magento (default is  dockerized-magento.local ) and save file  Using the authentication token from earlier,  export TLC_AUTH_TOKEN=\"<AUTH_TOKEN_FROM_EARLIER>\"  node guest-checkout.js   Once the script has finished running, you should 10 PNG screenshots of the various stages of checkout.",
            "title": "Quick Start"
        }
    ]
}